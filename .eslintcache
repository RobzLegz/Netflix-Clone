[{"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\index.js":"1","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\App.js":"2","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\serviceWorker.js":"3","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\app\\store.js":"4","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Nav.js":"5","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Banner.js":"6","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\axios.js":"7","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Requests.js":"8","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Row.js":"9","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\screens\\HomeScreen.js":"10","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\screens\\LoginScreen.js":"11","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\screens\\SignUpScreen.js":"12","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\firebase.js":"13","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\features\\userSlice.js":"14","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\screens\\ProfileScreen.js":"15","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Footer.js":"16"},{"size":644,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":1293,"mtime":1612471079852,"results":"19","hashOfConfig":"18"},{"size":5141,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":186,"mtime":1612470768147,"results":"21","hashOfConfig":"18"},{"size":2212,"mtime":1612534170920,"results":"22","hashOfConfig":"18"},{"size":1593,"mtime":1612434674031,"results":"23","hashOfConfig":"18"},{"size":140,"mtime":1612384577685,"results":"24","hashOfConfig":"18"},{"size":722,"mtime":1612384649135,"results":"25","hashOfConfig":"18"},{"size":1856,"mtime":1612537179163,"results":"26","hashOfConfig":"18"},{"size":912,"mtime":1612472270453,"results":"27","hashOfConfig":"18"},{"size":8452,"mtime":1612533238964,"results":"28","hashOfConfig":"18"},{"size":1544,"mtime":1612530068186,"results":"29","hashOfConfig":"18"},{"size":577,"mtime":1612466675283,"results":"30","hashOfConfig":"18"},{"size":460,"mtime":1612470750677,"results":"31","hashOfConfig":"18"},{"size":3769,"mtime":1612525149954,"results":"32","hashOfConfig":"18"},{"size":1834,"mtime":1612473004796,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"akcdoa",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\index.js",[],["70","71"],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\App.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\serviceWorker.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\app\\store.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Nav.js",["72","73","74","75","76","77"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = ({profileUrl}) => {\r\n\r\n    const [show, handleShow] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const transitionNavBar = () => {\r\n        if(window.scrollY > 100){\r\n            handleShow(true);\r\n        }else{\r\n            handleShow(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", transitionNavBar);\r\n        return () => window.removeEventListener(\"scroll\", transitionNavBar);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`nav ${ show && \"navBlack\"}`}>\r\n            <div className=\"navContents\">\r\n                <img onClick={() => history.push(\"/\")} className=\"navLogo\" src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"netflix logo\"/>\r\n                <div className=\"navLinks\">\r\n                    <a href=\"#\" className=\"active-link\">Home</a>\r\n                    <a href=\"#\">TV Shows</a>\r\n                    <a href=\"#\">Movies</a>\r\n                    <a href=\"#\">New & Popular</a>\r\n                    <a href=\"#\">My List</a>\r\n                    <a href=\"#\">Watch Again</a>\r\n                </div>\r\n                <div className=\"responsiveLinks\">\r\n                    <div className=\"browseButton\">\r\n                        <p>Browse</p>\r\n                        <ArrowDropDownIcon />\r\n                    </div>\r\n                </div>\r\n                <div className=\"navIconContainer\">\r\n                    <SearchIcon />\r\n                    <p>KIDS</p>\r\n                    <CardGiftcardIcon />\r\n                    <NotificationsIcon />\r\n                </div>\r\n                <img onClick={() => history.push(\"/profile\")} className=\"navAvatar\" src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Banner.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\axios.js",[],["78","79"],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Requests.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Row.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\screens\\HomeScreen.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\screens\\LoginScreen.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\screens\\SignUpScreen.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\firebase.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\features\\userSlice.js",[],"C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\screens\\ProfileScreen.js",["80","81"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport db, { auth } from '../firebase';\r\nimport Nav from '../Nav';\r\nimport \"./ProfileScreen.css\"\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst ProfileScreen = () => {\r\n\r\n    const user = useSelector(selectUser);\r\n    const [profileUrl, setProfileUrl] = useState(\"\");\r\n\r\n    const toggleProfileForm = (e) => {\r\n        e.preventDefault();\r\n        document.querySelector(\".profileImageForm\").classList.toggle(\"hiddenProfileUrlForm\");\r\n        setProfileUrl(profileUrl);\r\n    }\r\n\r\n    return (\r\n        <div className=\"profileScreen\">\r\n            <Nav profileUrl={profileUrl} />\r\n            <div className=\"profileScreenBody\">\r\n                <h1>Edit profile</h1>\r\n                <form onSubmit={() => this.enterUserProfilePic} className=\"profileImageForm hiddenProfileUrlForm\">\r\n                    <input onChange={(e) => setProfileUrl(e.target.value)} value={profileUrl} className=\"profileImageUrlInput\" type=\"text\" placeholder=\"Profile Image Url\"/>\r\n                    <button type=\"submit\" onClick={toggleProfileForm}>Enter</button>\r\n                </form>\r\n                <div className=\"profileScreenInfo\">\r\n                    <div className=\"profileImageContainer\">\r\n                        <img src={`${!profileUrl ? \"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" : profileUrl}`} alt=\"error\"/>\r\n                        <div onClick={toggleProfileForm} className=\"imageOverlay\">\r\n                            <EditIcon />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"profileScreenDetails\">\r\n                        <h2>{user.email}</h2>\r\n                        <div className=\"profileScreenPlans\">\r\n                            <h3>Plans (Current Plan: premium)</h3>\r\n                            <h4>Renewal date: 04/03/2021</h4>\r\n                            <div className=\"planContainer\">\r\n                                <div className=\"planPackage\">\r\n                                    <div className=\"standartInfo\">\r\n                                        <p>Netflix Standart</p>\r\n                                        <small>1080p</small>                                        \r\n                                    </div>\r\n                                    <button>Subscribe</button>\r\n                                </div>\r\n                                <div className=\"planPackage\">\r\n                                    <div className=\"standartInfo\">\r\n                                        <p>Netflix Basic</p>\r\n                                        <small>480p</small>                                        \r\n                                    </div>\r\n                                    <button>Subscribe</button>\r\n                                </div>\r\n                                <div className=\"planPackage\">\r\n                                    <div className=\"standartInfo\">\r\n                                        <p>Netflix Premium</p>\r\n                                        <small>4K+HDR</small>                                        \r\n                                    </div>\r\n                                    <button className=\"currentPackage\">Current Package</button>\r\n                                </div>\r\n                            </div>\r\n                            <button onClick={() => auth.signOut()} className=\"signoutButtonProfileScreen\">Sign Out</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\robzl\\OneDrive\\Desktop\\Programing\\React projects\\netflix_clone\\src\\Footer.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":32,"column":21,"nodeType":"88","endLine":32,"endColumn":57},{"ruleId":"86","severity":1,"message":"87","line":33,"column":21,"nodeType":"88","endLine":33,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":34,"column":21,"nodeType":"88","endLine":34,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":35,"column":21,"nodeType":"88","endLine":35,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":36,"column":21,"nodeType":"88","endLine":36,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":37,"column":21,"nodeType":"88","endLine":37,"endColumn":33},{"ruleId":"82","replacedBy":"89"},{"ruleId":"84","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"95","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":10},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["96"],["97"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","no-global-assign","no-unsafe-negation"]